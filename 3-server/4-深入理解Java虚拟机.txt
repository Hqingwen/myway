
Java虚拟机运行时数据区
    1、程序计数器 ProgramCounter Register
        当前线程执行的字节码的行号指示器
        每条线程都需要有一个独立的程序计数器，各条线程之间计数器互补影响，独立存储，即”线程私有“
    2、Java虚拟机栈 Java Virtual Machine Stacks
        描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧
        线程请求的栈深度大于虚拟机所允许的深度，抛出StackOverflowError
        扩展时无法申请到足够的内存，抛出OutOfMemoryError
    3、本地方法栈 Native Method Stacks
        与Java虚拟机栈相似，但其服务的是Native方法
        抛出异常同上
    4、Java堆 Java Heap
        被所有线程共享
        所有的对象实例及数组都要在堆上分配
        垃圾收集器管理的主要区域，故又被称作”GC堆“（Garbage Collected Heap）
        如果在堆中没有内存完成实例分配，并且堆也无法在扩展时，抛出OutOfMemoryError
    5、方法区 Method Area
        被所有线程共享
        存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据 ，又称”非堆“ （Non-Heap）
        无法满足内存分配需求时，抛出OutOfMemoryError
    6、运行时常量池
        方法区的一部分，类加载后存放编译期生成的各种字面量和符号引用，运行期间也可以放入信息
        无法满足内存分配需求时，抛出OutOfMemoryError

    7、直接内存
        非Java虚拟机规范中的内存区域
        JDK1.4加入NIO类用到，使用Native函数库直接分配堆外内存，运用存储在Java堆上的对象进行引用
        受物理内存限制，动态扩展时无法满足内存分配需求时，抛出OutOfMemoryError