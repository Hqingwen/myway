/********************************************************************************************************************
*   需求文档
********************************************************************************************************************/
一、最基本的原则是：
需求文档应当尽量简洁，用最易懂的描述来约束系统的预期行为。

二、书写优质需求文档需要遵循的步骤：

1. 定义系统的边界。这也是黑盒系统所必要的。

2. 定义输入和输出。这也应当是你看待内部系统的唯一方式。

3. 用最易懂的方式描述系统的预期行为

4. 除了输入和输出之外，你的需求是不是还涉及了系统的其他部分？如果是，那么你的需求就设计过度了。重构需求，让它变得精简。

5. 你的需求是不是过于模棱两可？加入更多的限定规范。注意：有些模棱两可的描述并不是坏事，假设描述所包含的所有情况均可被接受，且测试的时候不需要附加的信息加以说明，那么就没关系。你不需要（也不应该）把系统的行为限制得过头。

6. 你的需求是否可测试？（这里指的是黑盒测试）如果不是，你最好返回到第4步。如果这种返工发生很多次，那就说明你的黑盒无法正确描述系统，或者你的测试工具不够优秀。无论是哪种情况，不可测试的需求文档几乎就是一文不值的。

7. 你的需求文档通俗易懂么？如果你的需求文档非常难以读懂，那就说明你写得不好，只能给那些照着你的需求负责实施的人带来无尽的痛苦。如果是这样，回到第3步。

8. 你是不是真的做到了第4步？你确认么？再检查一下。


三、实际编写示例：
① 文档备案：包括文档日期、版本号、修改人、修改内容和审核人等信息，一般以表格形式位于文档开头。

② 目录：方便阅读

③ 背景描述：为什么要做这个产品/模块，市场行情，业务目标，产品定位等

④ 用户类型：简单地描述目标用户的情况

⑤ 项目时间安排：启动、结束等时间节点

⑥ 信息结构：简单理解为内容和页面的层级

⑦ 业务流程说明：以流程图形式说明业务各个状态间的切换逻辑（例如：游戏服务器满人时候需要切换到排队登录状态）

⑧ 需求详细说明：每一条需求的详细说明（包括：使用场景、UI描述、功能描述、优先级、输入/输出条件、处理流程、补充说明等）

⑨ 涉及关联业务部门的支持，还需要特别备忘。




























